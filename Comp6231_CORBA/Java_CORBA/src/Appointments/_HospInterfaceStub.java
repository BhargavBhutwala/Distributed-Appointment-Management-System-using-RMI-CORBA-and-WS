package Appointments;


/**
* Appointments/_HospInterfaceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Appointments.idl
* Saturday, 19 February, 2022 12:55:54 PM EST
*/

public class _HospInterfaceStub extends org.omg.CORBA.portable.ObjectImpl implements Appointments.HospInterface
{

  public String addAppoint (String id, String appointId, String appointType, String capacity)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addAppoint", true);
                $out.write_string (id);
                $out.write_string (appointId);
                $out.write_string (appointType);
                $out.write_string (capacity);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addAppoint (id, appointId, appointType, capacity        );
            } finally {
                _releaseReply ($in);
            }
  } // addAppoint

  public String removeAppoint (String id, String appointId, String appointType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeAppoint", true);
                $out.write_string (id);
                $out.write_string (appointId);
                $out.write_string (appointType);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return removeAppoint (id, appointId, appointType        );
            } finally {
                _releaseReply ($in);
            }
  } // removeAppoint

  public String listAppointAvailability (String id, String appointType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listAppointAvailability", true);
                $out.write_string (id);
                $out.write_string (appointType);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listAppointAvailability (id, appointType        );
            } finally {
                _releaseReply ($in);
            }
  } // listAppointAvailability

  public String bookAppoint (String id, String appointId, String appointType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("bookAppoint", true);
                $out.write_string (id);
                $out.write_string (appointId);
                $out.write_string (appointType);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return bookAppoint (id, appointId, appointType        );
            } finally {
                _releaseReply ($in);
            }
  } // bookAppoint

  public String cancelAppoint (String id, String appointId, String appointType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("cancelAppoint", true);
                $out.write_string (id);
                $out.write_string (appointId);
                $out.write_string (appointType);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return cancelAppoint (id, appointId, appointType        );
            } finally {
                _releaseReply ($in);
            }
  } // cancelAppoint

  public String getBookingSchedule (String id)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getBookingSchedule", true);
                $out.write_string (id);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getBookingSchedule (id        );
            } finally {
                _releaseReply ($in);
            }
  } // getBookingSchedule

  public String swapAppoint (String id, String newAppointId, String newAppointType, String oldAppointId, String oldAppointType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("swapAppoint", true);
                $out.write_string (id);
                $out.write_string (newAppointId);
                $out.write_string (newAppointType);
                $out.write_string (oldAppointId);
                $out.write_string (oldAppointType);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return swapAppoint (id, newAppointId, newAppointType, oldAppointId, oldAppointType        );
            } finally {
                _releaseReply ($in);
            }
  } // swapAppoint

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Appointments/HospInterface:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _HospInterfaceStub
